name: Terraform Deploy

env:
  TERRAFORM_VERSION: latest

on:
  push:
    branches:
      - main
    paths:
      - '**.tf'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to apply: '
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - prod

jobs: 
  matrix-prep:
    runs-on: ubuntu-latest
    outputs: 
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          if [[ -z "${{ inputs.environment }}" ]]; then
            echo "[ ${{ inputs.environment }} ]"
          else
            echo "[ dev, prod ]"
          fi
  terraform-validation:
    needs: matrix-prep
    runs-on: ubuntu-latest
    name: Terraform - Applying (${{ matrix.environment }})
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      TF_VAR_AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      TF_VAR_env: ${{ matrix.environment }}
      TF_VAR_name: ${{ github.event.repository.name }}
    
    strategy:
      fail-fast: false
      matrix: 
        environment: ${{ needs.matrix-prep.outputs.matrix }}

    concurrency: 
      group: ${{ matrix.environment }}
      cancel-in-progress: false
    environment: ${{ matrix.environment }}

    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Set tfstate_bucket env var
      run: echo "tfstate_bucket=terraform-$(aws sts get-caller-identity | jq -r '.Account')" >> $GITHUB_ENV

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Terraform Init
      id: init
      run: >
        terraform init \
          -backend-config "region=$TF_VAR_AWS_DEFAULT_REGION" \
          -backend-config "bucket=$tfstate_bucket" \
          -backend-config "key=${{ github.event.repository.name }}"

    - name: Terraform Plan
      id: plan
      run: terraform plan -input=false -no-color
      continue-on-error: false

    - name: Terraform Apply
      id: apply
      run: terraform apply -auto-approve